git 명령어
git은 기본적으로 리눅스 명령어 기반이다

git init 버전 관리를 위해서 디렉토리에 버전 관리륽 위한 메타 정보를 만드는 것. 
(git init 저장소 생성하기)

git add . 저장할 목록을 추가하는 것
그리고 git add .를 이용하면 .gitignore 파일을 참고하여 
index로 넘길파일과 안 넘길 파일을 결정합니다.
it add *를 이용하면 모든 파일을 index에 올릴 수 있습니다.


git log 내가 저장한 리스트를 보는 것
git status 현재 상태 확인 (내가 제일 많이 사용하는 명령어)
git commit -m "message"저장 하는것 first commit

git remote add origin 주소.git
git branch -M main
git push -u origin master 변경 사항 원격 서버 업로드 (push)

git push origin +master(기존의 프로젝트 밀고 새로 저장하려는데 데이터 손실때문에 막힐 때 사용함)

git reset c34c7f98d95529d2d62e706b8bce1965048df8be --hard 이전 버전의 git 저장으로
돌아가는 명령어(c34c7f98은 저장된거 마다 다름)
git reset HEAD~1 하나 전껄로 가 주세요 2하면 2개 전으로 가주세요

reset 돌아온 커밋 이후의 변경사항은 모두 unstaged 영역에 남는다. 
여기서 git add , git commit 을 해주면 다시 기존 상태로 돌아오게 된다.

soft reset이 변경사항을 unstaged 영역에 남겼다면, 
soft reset은 staged 영역에 남긴다. 

hard reset 타노스 리셋이다. 변경사항을 모두 제거한다. 
위 예제에서 hard reset을 사용했다면,
9190a3ac 에서 있었던 변경사항은 로컬에서 모두 사라진다.

warning: in the working copy of '.gitignore', 
LF will be replaced by CRLF the next time Git touches it
오류시에 Git의 core.autocrlf 라는 기능을 켜서 이를 자동 변환 해주도록 하면 된다.
git config --global core.autocrlf true // 시스템 전체에 적용
git config core.autocrlf true // 해당 프로젝트에만 적용